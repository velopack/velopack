; see http://editorconfig.org/ for docs on this file

root = true

[*]
ignore_if_in_header = This code was generated by a tool|<auto-generated>
indent_style = space
indent_size = 4

; uncomment to help with sharing files across os's (i.e. network share or through local vm)
#end_of_line = lf
; avoid a bom, which causes endless problems with naive text tooling
charset = utf-8
trim_trailing_whitespace = true
insert_final_newline = true
; keeping auto-format enabled helps avoid merge hell for projects without CI-based format validation
#disable_auto_format = true

[*.cs]# spacing rules
end_of_line = lf
insert_final_newline = true
trim_trailing_whitespace = true
indent_style = space
indent_size = 4

# Code style defaults
dotnet_diagnostic.IDE0001.severity = warning # Simplify name
dotnet_diagnostic.IDE0002.severity = warning # Simplify member access
dotnet_diagnostic.IDE0004.severity = warning # Remove unnecessary cast
dotnet_diagnostic.IDE0005.severity = warning # Remove unnecessary import
dotnet_diagnostic.IDE0035.severity = warning # Remove unreachable code
dotnet_diagnostic.IDE0043.severity = warning # Format string contains invalid placeholder
dotnet_diagnostic.IDE0063.severity = warning # Use simple 'using' statement
csharp_style_var_when_type_is_apparent = true:suggestion
dotnet_style_require_accessibility_modifiers = always:warning

# Sort using directives with System.* appearing first
dotnet_sort_system_directives_first = true:warning
dotnet_separate_import_directive_groups = false:warning
csharp_using_directive_placement = outside_namespace:warning

# Order modifiers
dotnet_diagnostic.IDE0036.severity = warning
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:warning

# Add braces
dotnet_diagnostic.IDE0011.severity = true:suggestion
csharp_prefer_braces = true:suggestion

# Avoid "this." if not necessary
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_property = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_event = false:warning

# Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# Enforce more modern language features when available
dotnet_style_object_initializer = true:warning
dotnet_style_collection_initializer = true:warning
dotnet_style_coalesce_expression = true:warning
dotnet_style_null_propagation = true:warning
dotnet_style_explicit_tuple_names = true:warning

# naming rules
# namespace Unity.Netcode { ... }
# public class NetworkObject { ... }
# public void Spawn(...) { ... }
dotnet_naming_symbols.usertypes_naming_symbols.applicable_kinds = namespace, class, struct, enum, property, method, field, event, delegate, local_function
dotnet_naming_symbols.usertypes_naming_symbols.applicable_accessibilities = public, internal
dotnet_naming_style.usertypes_naming_style.capitalization = pascal_case
dotnet_naming_rule.usertypes_naming_rule.symbols = usertypes_naming_symbols
dotnet_naming_rule.usertypes_naming_rule.style = usertypes_naming_style
dotnet_naming_rule.usertypes_naming_rule.severity = warning

# public void ChangeOwnership(ulong newOwnerClientId) { ... }
# ulong[] targetClientIds = clientRpcParams.Send.TargetClientIds;
dotnet_naming_symbols.paramlocal_naming_symbols.applicable_kinds = parameter, local
dotnet_naming_symbols.paramlocal_naming_symbols.applicable_accessibilities = *
dotnet_naming_style.paramlocal_naming_style.capitalization = camel_case
dotnet_naming_rule.paramlocal_naming_rule.symbols = paramlocal_naming_symbols
dotnet_naming_rule.paramlocal_naming_rule.style = paramlocal_naming_style
dotnet_naming_rule.paramlocal_naming_rule.severity = warning

# interface INetworkSerializable
dotnet_naming_symbols.interface_naming_symbols.applicable_kinds = interface
dotnet_naming_symbols.interface_naming_symbols.applicable_accessibilities = public, internal
dotnet_naming_style.interface_naming_style.required_prefix = I
dotnet_naming_style.interface_naming_style.capitalization = pascal_case
dotnet_naming_rule.interface_naming_rule.symbols = interface_naming_symbols
dotnet_naming_rule.interface_naming_rule.style = interface_naming_style
dotnet_naming_rule.interface_naming_rule.severity = warning

# class NetworkVariable<T>
# class NetworkDictionary<TKey, TValue>
dotnet_naming_symbols.typeparam_naming_symbols.applicable_kinds = type_parameter
dotnet_naming_symbols.typeparam_naming_symbols.applicable_accessibilities = public, internal
dotnet_naming_style.typeparam_naming_style.required_prefix = T
dotnet_naming_style.typeparam_naming_style.capitalization = pascal_case
dotnet_naming_rule.typeparam_naming_rule.symbols = typeparam_naming_symbols
dotnet_naming_rule.typeparam_naming_rule.style = typeparam_naming_style
dotnet_naming_rule.typeparam_naming_rule.severity = warning

# const int k_MaxCount
dotnet_naming_symbols.constant_naming_symbols.applicable_kinds = field
dotnet_naming_symbols.constant_naming_symbols.applicable_accessibilities = private, protected, protected_internal, private_protected
dotnet_naming_symbols.constant_naming_symbols.required_modifiers = const
dotnet_naming_style.constant_naming_style.required_prefix = k_
dotnet_naming_style.constant_naming_style.capitalization = pascal_case
dotnet_naming_rule.constant_naming_rule.symbols = constant_naming_symbols
dotnet_naming_rule.constant_naming_rule.style = constant_naming_style
dotnet_naming_rule.constant_naming_rule.severity = warning

# static readonly Vector3 k_DefaultLength
dotnet_naming_symbols.staticreadonly_naming_symbols.applicable_kinds = field
dotnet_naming_symbols.staticreadonly_naming_symbols.applicable_accessibilities = private, protected, protected_internal, private_protected
dotnet_naming_symbols.staticreadonly_naming_symbols.required_modifiers = static, readonly
dotnet_naming_style.staticreadonly_naming_style.required_prefix = k_
dotnet_naming_style.staticreadonly_naming_style.capitalization = pascal_case
dotnet_naming_rule.staticreadonly_naming_rule.symbols = staticreadonly_naming_symbols
dotnet_naming_rule.staticreadonly_naming_rule.style = staticreadonly_naming_style
dotnet_naming_rule.staticreadonly_naming_rule.severity = warning

# static int s_SharedCount
dotnet_naming_symbols.staticfield_naming_symbols.applicable_kinds = field
dotnet_naming_symbols.staticfield_naming_symbols.applicable_accessibilities = private, protected, protected_internal, private_protected
dotnet_naming_symbols.staticfield_naming_symbols.required_modifiers = static
dotnet_naming_style.staticfield_naming_style.required_prefix = s_
dotnet_naming_style.staticfield_naming_style.capitalization = pascal_case
dotnet_naming_rule.staticfield_naming_rule.symbols = staticfield_naming_symbols
dotnet_naming_rule.staticfield_naming_rule.style = staticfield_naming_style
dotnet_naming_rule.staticfield_naming_rule.severity = warning

# int m_CurrentCount
dotnet_naming_symbols.memberfield_naming_symbols.applicable_kinds = field
dotnet_naming_symbols.memberfield_naming_symbols.applicable_accessibilities = private, protected, protected_internal, private_protected
dotnet_naming_style.memberfield_naming_style.required_prefix = m_
dotnet_naming_style.memberfield_naming_style.capitalization = pascal_case
dotnet_naming_rule.memberfield_naming_rule.symbols = memberfield_naming_symbols
dotnet_naming_rule.memberfield_naming_rule.style = memberfield_naming_style
dotnet_naming_rule.memberfield_naming_rule.severity = warning
[*.asmdef]
scrape_api = true

[**/Tests/**.asmdef]
scrape_api = false

[*.Tests.asmdef]
scrape_api = false

[*.md]
indent_size = 2
; trailing whitespace is unfortunately significant in markdown
trim_trailing_whitespace = false
; uncomment to enable basic formatting of markdown files
#formatters = generic

[{Makefile,makefile}]
; tab characters are part of the Makefile format
indent_style = tab

[*.asmdef]
indent_size = 4

[*.json]
indent_size = 2

[*.{vcproj,bat,cmd,xaml,tt,t4,ttinclude}]
end_of_line = crlf

; this VS-specific stuff is based on experiments to see how VS will modify a file after it has been manually edited.
; the settings are meant to closely match what VS does to minimize unnecessary diffs.
[*.{vcxproj,vcxproj.filters}]
indent_style = space
indent_size = 2
end_of_line = crlf
charset = utf-8-bom
trim_trailing_whitespace = true
insert_final_newline = false
; must be broken out because of 51-char bug (https://github.com/editorconfig/editorconfig-visualstudio/issues/21)
[*.{csproj,pyproj,props,targets}]
indent_style = space
indent_size = 2
end_of_line = crlf
charset = utf-8-bom
trim_trailing_whitespace = true
insert_final_newline = false
[*.{sln,sln.template}]
indent_style = tab
indent_size = 4
end_of_line = crlf
charset = utf-8
trim_trailing_whitespace = true
insert_final_newline = false
