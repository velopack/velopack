<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net48</TargetFramework>
    <ImplicitUsings>true</ImplicitUsings>
    <UseWPF>true</UseWPF>
    <EnableWindowsTargeting>true</EnableWindowsTargeting>
    <LangVersion>latest</LangVersion>
    <NoWarn>$(NoWarn);IDE0161</NoWarn>
    <!--<UseLocalVelopack>true</UseLocalVelopack>-->
  </PropertyGroup>

  <PropertyGroup>
    <!-- This overrides the default Program.Main that WPF creates for you, and allows you to add VelopackApp -->
    <StartupObject>VeloWpfSample.Program</StartupObject>
  </PropertyGroup>

  <!-- For test build scripts which target the local Velopack project instead of the NuGet package -->
  <Choose>
    <When Condition=" $(UseLocalVelopack) != '' ">
      <ItemGroup>
        <ProjectReference Include="..\..\src\Velopack\Velopack.csproj" />
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <PackageReference Include="Velopack" Version="0.*" />
      </ItemGroup>
    </Otherwise>
  </Choose>

  <!-- Used for demonstrating updates, so the installed application can find the Release directory, remove in your app -->
  <!-- Used for demonstrating updates, so the installed application can find the Release directory -->
  <ItemGroup>
    <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute">
      <_Parameter1>WpfSampleReleaseDir</_Parameter1>
      <_Parameter2>$(MSBuildThisFileDirectory)releases</_Parameter2>
    </AssemblyAttribute>
  </ItemGroup>

  <Import Project="..\..\src\Velopack.Build\Velopack.Build.targets" Condition=" $(UseLocalVelopack) != '' " />
</Project>
