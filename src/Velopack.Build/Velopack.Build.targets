<Project>
  <PropertyGroup>
    <VelopackPackOnPublish Condition="$(VelopackPackOnPublish) == ''">true</VelopackPackOnPublish>
    <VelopackPushOnPublish Condition="$(VelopackPushOnPublish) == ''">false</VelopackPushOnPublish>
    <!-- https://learn.microsoft.com/visualstudio/msbuild/tutorial-custom-task-code-generation?view=vs-2022&WT.mc_id=DT-MVP-5003472#changes-required-to-multitarget -->
    <VelopackStronglyTyped_TFM Condition=" '$(MSBuildRuntimeType)' != 'Core' ">net472</VelopackStronglyTyped_TFM>
    <VelopackStronglyTyped_TFM Condition=" '$(MSBuildRuntimeType)' == 'Core' ">net6.0</VelopackStronglyTyped_TFM>
    <VelopackBuildDll>$(MSBuildThisFileDirectory)$(VelopackStronglyTyped_TFM)\Velopack.Build.dll</VelopackBuildDll>
  </PropertyGroup>

  <UsingTask TaskName="Velopack.Build.PackTask" AssemblyFile="$(VelopackBuildDll)"/>
  <UsingTask TaskName="Velopack.Build.PublishTask" AssemblyFile="$(VelopackBuildDll)"/>

  <Target Name="_VelopackResolveProperties" AfterTargets="Publish" BeforeTargets="VelopackBuildRelease">
    <PropertyGroup>
      <VelopackPackVersion Condition="'$(VelopackPackVersion)' == ''">$(Version)</VelopackPackVersion>
      <VelopackImplicitPackId Condition="'$(VelopackPackId)' == ''">true</VelopackImplicitPackId>
      <VelopackPackId Condition="'$(VelopackPackId)' == ''">$(AssemblyName)</VelopackPackId>
      <VelopackEntryExecutableName Condition="'$(VelopackEntryExecutableName)' == ''">$(AssemblyName)</VelopackEntryExecutableName>
      <VelopackPackDirectory Condition="'$(VelopackPackDirectory)' == ''">$(PublishDir)</VelopackPackDirectory>
      <VelopackReleaseDirectory Condition="'$(VelopackReleaseDirectory)' == ''">Releases</VelopackReleaseDirectory>
      <VelopackPackTitle Condition="'$(VelopackPackTitle)' == ''">$(Product)</VelopackPackTitle>
      <VelopackPackAuthors Condition="'$(VelopackPackAuthors)' == ''">$(Authors)</VelopackPackAuthors>
      <VelopackTargetRuntime Condition="'$(VelopackTargetRuntime)' == ''">$(RuntimeIdentifier)</VelopackTargetRuntime>

      <!-- Allows a cross platform app (eg. Avalonia) to specify all three via csproj and have them applied correctly -->
      <!-- TODO: this should probably switch based on the target RID and not the current OS, but we currently don't 
           support packing for an OS != target RID so we're probably okay for now. -->
      <VelopackIcon Condition="'$(VelopackIcon)' == '' and $([System.OperatingSystem]::IsWindows())">$(ApplicationIcon)</VelopackIcon>
      <VelopackIcon Condition="'$(VelopackIcon)' == '' and $([System.OperatingSystem]::IsLinux())">$(ApplicationPng)</VelopackIcon>
      <VelopackIcon Condition="'$(VelopackIcon)' == '' and $([System.OperatingSystem]::IsMacOS())">$(ApplicationIcns)</VelopackIcon>
    </PropertyGroup>

    <ConvertToAbsolutePath Paths="$(VelopackReleaseDirectory)">
      <Output TaskParameter="AbsolutePaths" PropertyName="VelopackReleaseDirectory"/>
    </ConvertToAbsolutePath>

    <ConvertToAbsolutePath Paths="$(VelopackPackDirectory)">
      <Output TaskParameter="AbsolutePaths" PropertyName="VelopackPackDirectory"/>
    </ConvertToAbsolutePath>

    <ConvertToAbsolutePath Paths="$(VelopackIcon)">
      <Output TaskParameter="AbsolutePaths" PropertyName="VelopackIcon"/>
    </ConvertToAbsolutePath>
  </Target>

  <Target Name="VelopackBuildRelease" AfterTargets="Publish" Condition="'$(VelopackPackOnPublish)' == 'true'">
    <Error Condition=" '$(SelfContained)' != 'true' and $([System.OperatingSystem]::IsMacOS()) "
           Text="Only SelfContained=true releases are supported on MacOS. Please dotnet publish with the --self-contained option." />
    <Error Condition=" '$(SelfContained)' != 'true' and $([System.OperatingSystem]::IsLinux()) "
           Text="Only SelfContained=true releases are supported on Linux. Please dotnet publish with the --self-contained option." />

    <PackTask
      SelfContained="$(SelfContained)"
      TargetFramework="$(TargetFramework)"
      TargetRuntime="$(VelopackTargetRuntime)"
      PackVersion="$(VelopackPackVersion)"
      Runtimes="$(VelopackRuntimes)"
      PackId="$(VelopackPackId)"
      PackDirectory="$(VelopackPackDirectory)"
      ReleaseDir="$(VelopackReleaseDirectory)"
      PackAuthors="$(VelopackPackAuthors)"
      PackTitle="$(VelopackPackTitle)"
      EntryExecutableName="$(VelopackEntryExecutableName)"
      Icon="$(VelopackIcon)"
      ReleaseNotes="$(VelopackReleaseNotes)"
      DeltaMode="$(VelopackDeltaMode)"
      Channel="$(VelopackChannel)"
      PackIsAppDir="$(VelopackPackIsAppDir)"
      Exclude="$(VelopackExclude)"
      NoPortable="$(VelopackNoPortable)"
      NoInst="$(VelopackNoInst)"
      InstWelcome="$(VelopackInstWelcome)"
      InstReadme="$(VelopackInstReadme)"
      InstLicense="$(VelopackInstLicense)"
      InstConclusion="$(VelopackInstConclusion)"
      SignAppIdentity="$(VelopackSignAppIdentity)"
      SignInstallIdentity="$(VelopackSignInstallIdentity)"
      SignEntitlements="$(VelopackSignEntitlements)"
      NotaryProfile="$(VelopackNotaryProfile)"
      Keychain="$(VelopackKeychain)"
      BundleId="$(VelopackBundleId)"
      InfoPlistPath="$(VelopackInfoPlistPath)"
      SplashImage="$(VelopackSplashImage)"
      SkipVelopackAppCheck="$(VelopackSkipVelopackAppCheck)"
      SignParameters="$(VelopackSignParameters)"
      SignSkipDll="$(VelopackSignSkipDll)"
      SignParallel="$(VelopackSignParallel)"
      SignTemplate="$(VelopackSignTemplate)"
      Categories="$(VelopackCategories)"
    />
  </Target>

  <Target Name="VelopackPushRelease" AfterTargets="VelopackBuildRelease" Condition="'$(VelopackPushOnPublish)' == 'true'">
    <Error Condition="'$(VelopackImplicitPackId)' == 'true'" Text="VelopackPackId must be set explictly before pushing a release to remote." />
    <PublishTask
      ReleaseDirectory="$(VelopackReleaseDirectory)"
      Version="$(VelopackPackVersion)"
      ServiceUrl="$(VelopackFlowServiceUrl)"
      ApiKey="$(VelopackFlowApiKey)"
    />
  </Target>
</Project>