// Automatically generated by flapigen

#pragma once

//for (u)intX_t types
#include <stdint.h>

#ifdef __cplusplus
static_assert(sizeof(uintptr_t) == sizeof(uint8_t) * 8,
   "our conversion usize <-> uintptr_t is wrong");
extern "C" {
#endif


    typedef struct FooOpaque FooOpaque;

    FooOpaque *Foo_new(int32_t val);

    int32_t Foo_f(const FooOpaque * const self, int32_t a, int32_t b);
    //Custom doc comment
    void Foo_setField(FooOpaque * const self, int32_t v);

    void Foo_delete(const FooOpaque *self);

#ifdef __cplusplus
}
#endif

