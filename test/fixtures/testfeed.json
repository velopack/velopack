{
  "Assets": [
    {
      "PackageId": "AvaloniaCrossPlat",
      "Version": "1.0.11",
      "Type": "Full",
      "UnknownProperty": "To test that serializers will ignore this",
      "FileName": "AvaloniaCrossPlat-1.0.11-full.nupkg",
      "SHA1": "E0BEDE4B1329B0E8279A15E7717CE823ABE8367C",
      "Size": 13558493,
      "NotesMarkdown": "\u003Cpicture\u003E\n  \u003Csource media=\u0022(prefers-color-scheme: dark)\u0022 srcset=\u0022docs/artwork/velopack-white.svg\u0022\u003E\n  \u003Cimg alt=\u0022Velopack Logo\u0022 src=\u0022docs/artwork/velopack-black.svg\u0022 width=\u0022400\u0022\u003E\n\u003C/picture\u003E\n\n---\n\n[![Nuget](https://img.shields.io/nuget/v/Velopack?style=flat-square)](https://www.nuget.org/packages/Velopack/)\n[![Discord](https://img.shields.io/discord/767856501477343282?style=flat-square\u0026color=purple)](https://discord.gg/CjrCrNzd3F)\n[![Build](https://img.shields.io/github/actions/workflow/status/velopack/velopack/build.yml?branch=develop\u0026style=flat-square)](https://github.com/velopack/velopack/actions)\n[![Codecov](https://img.shields.io/codecov/c/github/velopack/velopack?style=flat-square)](https://app.codecov.io/gh/velopack/velopack)\n[![License](https://img.shields.io/github/license/velopack/velopack?style=flat-square)](https://github.com/velopack/velopack/blob/develop/LICENSE)\n\nVelopack is a setup / installation framework for cross-platform dotnet applications. Great out-of-the-box development experience, with zero configuration or setup needed. Lightning fast to use, and lightning fast for your users, too.\n\n## Features\n\n- \uD83D\uDE0D **Zero config** \u2013 Velopack takes your dotnet build output (eg. \u0060dotnet publish\u0060), and generates an installer, and update package in a single command.\n- \uD83C\uDFAF **Cross platform** \u2013 Velopack supports building packages for **Windows**, **OSX**, and **Linux**. No matter your target, Velopack can create a release in just one command.\n- \uD83D\uDE80 **Automatic migrations** - If you are coming from [Squirrel.Windows](https://github.com/Squirrel/Squirrel.Windows) or [Clowd.Squirrel](https://github.com/clowd/Clowd.Squirrel), Velopack will automatically migrate your application. Just build your Velopack release and deploy! [Read more.](docs/migrating.md)\n- \u26A1\uFE0F **Lightning fast** \u2013 Velopack is written in Rust for native performance. Creating releases is multi-threaded, and produces delta packages for ultra fast app updates. Applying update packages is highly optimised, and often can be done in the background.\n\n## Getting Started\nThis is a very simple example of the steps you would take to generate an installer and update packages for your application. Be sure to [read the documentation](docs) for an overview of more features!\n\n1. Install the command line tool \u0060vpk\u0060:\n   \u0060\u0060\u0060cmd\n   dotnet tool install -g vpk\n   \u0060\u0060\u0060\n2. Install the  [Velopack NuGet Package](https://www.nuget.org/packages/velopack) in your main project:\n   \u0060\u0060\u0060cmd\n   dotnet add package Velopack\n   \u0060\u0060\u0060\n3. Configure your Velopack app at the beginning of \u0060Program.Main\u0060:\n   \u0060\u0060\u0060cs\n   static void Main(string[] args)\n   {\n       VelopackApp.Build().Run();\n       // ... your other startup code below\n   }\n   \u0060\u0060\u0060\n4. Publish dotnet and build your first Velopack release! \uD83C\uDF89\n   \u0060\u0060\u0060cmd\n   dotnet publish -c Release --self-contained -r win-x64 -o .\\publish\n   vpk pack -u YourAppId -v 1.0.0 -p .\\publish\n   \u0060\u0060\u0060\n5. Add automatic updating to your app:\n   \u0060\u0060\u0060cs\n   private static async Task UpdateMyApp()\n   {\n       var mgr = new UpdateManager(\u0022https://the.place/you-host/updates\u0022);\n\n       // check for new version\n       var newVersion = await mgr.CheckForUpdatesAsync();\n       if (newVersion == null)\n           return; // no update available\n\n       // download new version\n       await mgr.DownloadUpdatesAsync(newVersion);\n\n       // install new version and restart app\n       mgr.ApplyUpdatesAndRestart();\n   }\n   \u0060\u0060\u0060\n\nIf you\u0027re not sure how these instructions fit into your app, check the example apps for common scenarios such as WPF or Avalonia.\n\n## Documentation\n- \uD83D\uDCD6 [Read the docs](docs)\n- \uD83D\uDD76\uFE0F [View example apps](examples)\n\n## Community\n- \u2753 Ask questions, get support, or discuss ideas on [our Discord server](https://discord.gg/CjrCrNzd3F)\n- \uD83D\uDDE3\uFE0F Report bugs on [GitHub Issues](https://github.com/velopack/velopack/issues)\n\n\n## Contributing\n- \uD83D\uDCAC Join us on [Discord](https://discord.gg/CjrCrNzd3F) to get involved in dev discussions\n- \uD83D\uDEA6 Read our [compiling guide](docs/compiling.md)",
      "NotesHTML": "\u003Cp\u003E\u003Cpicture\u003E\n  \u003Csource media=\u0022(prefers-color-scheme: dark)\u0022 srcset=\u0022docs/artwork/velopack-white.svg\u0022\u003E\n  \u003Cimg alt=\u0022Velopack Logo\u0022 src=\u0022docs/artwork/velopack-black.svg\u0022 width=\u0022400\u0022\u003E\n\u003C/picture\u003E\u003C/p\u003E\n\n\u003Cp\u003E\u003Chr /\u003E\u003C/p\u003E\n\n\u003Cp\u003E\u003Ca href=\u0022https://www.nuget.org/packages/Velopack/\u0022\u003E\u003Cimg src=\u0022https://img.shields.io/nuget/v/Velopack?style=flat-square\u0022 alt=\u0022Nuget\u0022 /\u003E\u003C/a\u003E\n\u003Ca href=\u0022https://discord.gg/CjrCrNzd3F\u0022\u003E\u003Cimg src=\u0022https://img.shields.io/discord/767856501477343282?style=flat-square\u0026amp;color=purple\u0022 alt=\u0022Discord\u0022 /\u003E\u003C/a\u003E\n\u003Ca href=\u0022https://github.com/velopack/velopack/actions\u0022\u003E\u003Cimg src=\u0022https://img.shields.io/github/actions/workflow/status/velopack/velopack/build.yml?branch=develop\u0026amp;style=flat-square\u0022 alt=\u0022Build\u0022 /\u003E\u003C/a\u003E\n\u003Ca href=\u0022https://app.codecov.io/gh/velopack/velopack\u0022\u003E\u003Cimg src=\u0022https://img.shields.io/codecov/c/github/velopack/velopack?style=flat-square\u0022 alt=\u0022Codecov\u0022 /\u003E\u003C/a\u003E\n\u003Ca href=\u0022https://github.com/velopack/velopack/blob/develop/LICENSE\u0022\u003E\u003Cimg src=\u0022https://img.shields.io/github/license/velopack/velopack?style=flat-square\u0022 alt=\u0022License\u0022 /\u003E\u003C/a\u003E\u003C/p\u003E\n\n\u003Cp\u003EVelopack is a setup / installation framework for cross-platform dotnet applications. Great out-of-the-box development experience, with zero configuration or setup needed. Lightning fast to use, and lightning fast for your users, too.\u003C/p\u003E\n\n\u003Cp\u003E\u003Ch2\u003EFeatures\u003C/h2\u003E\u003C/p\u003E\n\n\u003Cp\u003E\u003Cul\u003E\n\u003Cli\u003E\uD83D\uDE0D \u003Cstrong\u003EZero config\u003C/strong\u003E \u2013 Velopack takes your dotnet build output (eg. \u003Ccode\u003Edotnet publish\u003C/code\u003E), and generates an installer, and update package in a single command.\u003C/li\u003E\n\u003Cli\u003E\uD83C\uDFAF \u003Cstrong\u003ECross platform\u003C/strong\u003E \u2013 Velopack supports building packages for \u003Cstrong\u003EWindows\u003C/strong\u003E, \u003Cstrong\u003EOSX\u003C/strong\u003E, and \u003Cstrong\u003ELinux\u003C/strong\u003E. No matter your target, Velopack can create a release in just one command.\u003C/li\u003E\n\u003Cli\u003E\uD83D\uDE80 \u003Cstrong\u003EAutomatic migrations\u003C/strong\u003E - If you are coming from \u003Ca href=\u0022https://github.com/Squirrel/Squirrel.Windows\u0022\u003ESquirrel.Windows\u003C/a\u003E or \u003Ca href=\u0022https://github.com/clowd/Clowd.Squirrel\u0022\u003EClowd.Squirrel\u003C/a\u003E, Velopack will automatically migrate your application. Just build your Velopack release and deploy! \u003Ca href=\u0022docs/migrating.md\u0022\u003ERead more.\u003C/a\u003E\u003C/li\u003E\n\u003Cli\u003E\u26A1\uFE0F \u003Cstrong\u003ELightning fast\u003C/strong\u003E \u2013 Velopack is written in Rust for native performance. Creating releases is multi-threaded, and produces delta packages for ultra fast app updates. Applying update packages is highly optimised, and often can be done in the background.\u003C/li\u003E\n\u003C/ul\u003E\n\u003Ch2\u003EGetting Started\u003C/h2\u003E\u003C/p\u003E\n\n\u003Cp\u003EThis is a very simple example of the steps you would take to generate an installer and update packages for your application. Be sure to \u003Ca href=\u0022docs\u0022\u003Eread the documentation\u003C/a\u003E for an overview of more features!\u003C/p\u003E\n\n\u003Cp\u003E\u003Col\u003E\n\u003Cli\u003EInstall the command line tool \u003Ccode\u003Evpk\u003C/code\u003E:\n\u003Ccode\u003Ecmd\ndotnet tool install -g vpk\n\u003C/code\u003E\u003C/li\u003E\n\u003Cli\u003EInstall the  \u003Ca href=\u0022https://www.nuget.org/packages/velopack\u0022\u003EVelopack NuGet Package\u003C/a\u003E in your main project:\n\u003Ccode\u003Ecmd\ndotnet add package Velopack\n\u003C/code\u003E\u003C/li\u003E\n\u003Cli\u003EConfigure your Velopack app at the beginning of \u003Ccode\u003EProgram.Main\u003C/code\u003E:\n\u003Ccode\u003Ecs\nstatic void Main(string[] args)\n{\n   VelopackApp.Build().Run();\n   // ... your other startup code below\n}\n\u003C/code\u003E\u003C/li\u003E\n\u003Cli\u003EPublish dotnet and build your first Velopack release! \uD83C\uDF89\n\u003Ccode\u003Ecmd\ndotnet publish -c Release --self-contained -r win-x64 -o .\\publish\nvpk pack -u YourAppId -v 1.0.0 -p .\\publish\n\u003C/code\u003E\u003C/li\u003E\n\u003Cli\u003E\u003Cp\u003EAdd automatic updating to your app:\n\u0060\u0060\u0060cs\nprivate static async Task UpdateMyApp()\n{\n   var mgr = new UpdateManager(\u0022https://the.place/you-host/updates\u0022);\u003C/p\u003E\u003C/p\u003E\n\n\u003Cp\u003E\u003Cp\u003E// check for new version\n   var newVersion = await mgr.CheckForUpdatesAsync();\n   if (newVersion == null)\n       return; // no update available\u003C/p\u003E\u003C/p\u003E\n\n\u003Cp\u003E\u003Cp\u003E// download new version\n   await mgr.DownloadUpdatesAsync(newVersion);\u003C/p\u003E\u003C/p\u003E\n\n\u003Cp\u003E\u003Cp\u003E// install new version and restart app\n   mgr.ApplyUpdatesAndRestart();\n}\n\u0060\u0060\u0060\u003C/p\u003E\u003C/li\u003E\n\u003C/ol\u003E\nIf you\u0027re not sure how these instructions fit into your app, check the example apps for common scenarios such as WPF or Avalonia.\u003C/p\u003E\n\n\u003Cp\u003E\u003Ch2\u003EDocumentation\u003C/h2\u003E\u003C/p\u003E\n\n\u003Cp\u003E\u003Cul\u003E\n\u003Cli\u003E\uD83D\uDCD6 \u003Ca href=\u0022docs\u0022\u003ERead the docs\u003C/a\u003E\u003C/li\u003E\n\u003Cli\u003E\uD83D\uDD76\uFE0F \u003Ca href=\u0022examples\u0022\u003EView example apps\u003C/a\u003E\u003C/li\u003E\n\u003C/ul\u003E\n\u003Ch2\u003ECommunity\u003C/h2\u003E\u003C/p\u003E\n\n\u003Cp\u003E\u003Cul\u003E\n\u003Cli\u003E\u2753 Ask questions, get support, or discuss ideas on \u003Ca href=\u0022https://discord.gg/CjrCrNzd3F\u0022\u003Eour Discord server\u003C/a\u003E\u003C/li\u003E\n\u003Cli\u003E\uD83D\uDDE3\uFE0F Report bugs on \u003Ca href=\u0022https://github.com/velopack/velopack/issues\u0022\u003EGitHub Issues\u003C/a\u003E\u003C/li\u003E\n\u003C/ul\u003E\n\u003Ch2\u003EContributing\u003C/h2\u003E\u003C/p\u003E\n\n\u003Cp\u003E\u003Cul\u003E\n\u003Cli\u003E\uD83D\uDCAC Join us on \u003Ca href=\u0022https://discord.gg/CjrCrNzd3F\u0022\u003EDiscord\u003C/a\u003E to get involved in dev discussions\u003C/li\u003E\n\u003Cli\u003E\uD83D\uDEA6 Read our \u003Ca href=\u0022docs/compiling.md\u0022\u003Ecompiling guide\u003C/a\u003E\u003C/li\u003E\n\u003C/ul\u003E\u003C/p\u003E"
    },
    {
      "PackageId": "AvaloniaCrossPlat",
      "Version": "1.0.11",
      "Type": "Delta",
      "FileName": "AvaloniaCrossPlat-1.0.11-delta.nupkg",
      "SHA1": "1E2618E5B8A22D9BF930AAEEEBC4626255FE0368",
      "Size": 86578,
      "NotesMarkdown": "\u003Cpicture\u003E\n  \u003Csource media=\u0022(prefers-color-scheme: dark)\u0022 srcset=\u0022docs/artwork/velopack-white.svg\u0022\u003E\n  \u003Cimg alt=\u0022Velopack Logo\u0022 src=\u0022docs/artwork/velopack-black.svg\u0022 width=\u0022400\u0022\u003E\n\u003C/picture\u003E\n\n---\n\n[![Nuget](https://img.shields.io/nuget/v/Velopack?style=flat-square)](https://www.nuget.org/packages/Velopack/)\n[![Discord](https://img.shields.io/discord/767856501477343282?style=flat-square\u0026color=purple)](https://discord.gg/CjrCrNzd3F)\n[![Build](https://img.shields.io/github/actions/workflow/status/velopack/velopack/build.yml?branch=develop\u0026style=flat-square)](https://github.com/velopack/velopack/actions)\n[![Codecov](https://img.shields.io/codecov/c/github/velopack/velopack?style=flat-square)](https://app.codecov.io/gh/velopack/velopack)\n[![License](https://img.shields.io/github/license/velopack/velopack?style=flat-square)](https://github.com/velopack/velopack/blob/develop/LICENSE)\n\nVelopack is a setup / installation framework for cross-platform dotnet applications. Great out-of-the-box development experience, with zero configuration or setup needed. Lightning fast to use, and lightning fast for your users, too.\n\n## Features\n\n- \uD83D\uDE0D **Zero config** \u2013 Velopack takes your dotnet build output (eg. \u0060dotnet publish\u0060), and generates an installer, and update package in a single command.\n- \uD83C\uDFAF **Cross platform** \u2013 Velopack supports building packages for **Windows**, **OSX**, and **Linux**. No matter your target, Velopack can create a release in just one command.\n- \uD83D\uDE80 **Automatic migrations** - If you are coming from [Squirrel.Windows](https://github.com/Squirrel/Squirrel.Windows) or [Clowd.Squirrel](https://github.com/clowd/Clowd.Squirrel), Velopack will automatically migrate your application. Just build your Velopack release and deploy! [Read more.](docs/migrating.md)\n- \u26A1\uFE0F **Lightning fast** \u2013 Velopack is written in Rust for native performance. Creating releases is multi-threaded, and produces delta packages for ultra fast app updates. Applying update packages is highly optimised, and often can be done in the background.\n\n## Getting Started\nThis is a very simple example of the steps you would take to generate an installer and update packages for your application. Be sure to [read the documentation](docs) for an overview of more features!\n\n1. Install the command line tool \u0060vpk\u0060:\n   \u0060\u0060\u0060cmd\n   dotnet tool install -g vpk\n   \u0060\u0060\u0060\n2. Install the  [Velopack NuGet Package](https://www.nuget.org/packages/velopack) in your main project:\n   \u0060\u0060\u0060cmd\n   dotnet add package Velopack\n   \u0060\u0060\u0060\n3. Configure your Velopack app at the beginning of \u0060Program.Main\u0060:\n   \u0060\u0060\u0060cs\n   static void Main(string[] args)\n   {\n       VelopackApp.Build().Run();\n       // ... your other startup code below\n   }\n   \u0060\u0060\u0060\n4. Publish dotnet and build your first Velopack release! \uD83C\uDF89\n   \u0060\u0060\u0060cmd\n   dotnet publish -c Release --self-contained -r win-x64 -o .\\publish\n   vpk pack -u YourAppId -v 1.0.0 -p .\\publish\n   \u0060\u0060\u0060\n5. Add automatic updating to your app:\n   \u0060\u0060\u0060cs\n   private static async Task UpdateMyApp()\n   {\n       var mgr = new UpdateManager(\u0022https://the.place/you-host/updates\u0022);\n\n       // check for new version\n       var newVersion = await mgr.CheckForUpdatesAsync();\n       if (newVersion == null)\n           return; // no update available\n\n       // download new version\n       await mgr.DownloadUpdatesAsync(newVersion);\n\n       // install new version and restart app\n       mgr.ApplyUpdatesAndRestart();\n   }\n   \u0060\u0060\u0060\n\nIf you\u0027re not sure how these instructions fit into your app, check the example apps for common scenarios such as WPF or Avalonia.\n\n## Documentation\n- \uD83D\uDCD6 [Read the docs](docs)\n- \uD83D\uDD76\uFE0F [View example apps](examples)\n\n## Community\n- \u2753 Ask questions, get support, or discuss ideas on [our Discord server](https://discord.gg/CjrCrNzd3F)\n- \uD83D\uDDE3\uFE0F Report bugs on [GitHub Issues](https://github.com/velopack/velopack/issues)\n\n\n## Contributing\n- \uD83D\uDCAC Join us on [Discord](https://discord.gg/CjrCrNzd3F) to get involved in dev discussions\n- \uD83D\uDEA6 Read our [compiling guide](docs/compiling.md)",
      "NotesHTML": "\u003Cp\u003E\u003Cpicture\u003E\n  \u003Csource media=\u0022(prefers-color-scheme: dark)\u0022 srcset=\u0022docs/artwork/velopack-white.svg\u0022\u003E\n  \u003Cimg alt=\u0022Velopack Logo\u0022 src=\u0022docs/artwork/velopack-black.svg\u0022 width=\u0022400\u0022\u003E\n\u003C/picture\u003E\u003C/p\u003E\n\n\u003Cp\u003E\u003Chr /\u003E\u003C/p\u003E\n\n\u003Cp\u003E\u003Ca href=\u0022https://www.nuget.org/packages/Velopack/\u0022\u003E\u003Cimg src=\u0022https://img.shields.io/nuget/v/Velopack?style=flat-square\u0022 alt=\u0022Nuget\u0022 /\u003E\u003C/a\u003E\n\u003Ca href=\u0022https://discord.gg/CjrCrNzd3F\u0022\u003E\u003Cimg src=\u0022https://img.shields.io/discord/767856501477343282?style=flat-square\u0026amp;color=purple\u0022 alt=\u0022Discord\u0022 /\u003E\u003C/a\u003E\n\u003Ca href=\u0022https://github.com/velopack/velopack/actions\u0022\u003E\u003Cimg src=\u0022https://img.shields.io/github/actions/workflow/status/velopack/velopack/build.yml?branch=develop\u0026amp;style=flat-square\u0022 alt=\u0022Build\u0022 /\u003E\u003C/a\u003E\n\u003Ca href=\u0022https://app.codecov.io/gh/velopack/velopack\u0022\u003E\u003Cimg src=\u0022https://img.shields.io/codecov/c/github/velopack/velopack?style=flat-square\u0022 alt=\u0022Codecov\u0022 /\u003E\u003C/a\u003E\n\u003Ca href=\u0022https://github.com/velopack/velopack/blob/develop/LICENSE\u0022\u003E\u003Cimg src=\u0022https://img.shields.io/github/license/velopack/velopack?style=flat-square\u0022 alt=\u0022License\u0022 /\u003E\u003C/a\u003E\u003C/p\u003E\n\n\u003Cp\u003EVelopack is a setup / installation framework for cross-platform dotnet applications. Great out-of-the-box development experience, with zero configuration or setup needed. Lightning fast to use, and lightning fast for your users, too.\u003C/p\u003E\n\n\u003Cp\u003E\u003Ch2\u003EFeatures\u003C/h2\u003E\u003C/p\u003E\n\n\u003Cp\u003E\u003Cul\u003E\n\u003Cli\u003E\uD83D\uDE0D \u003Cstrong\u003EZero config\u003C/strong\u003E \u2013 Velopack takes your dotnet build output (eg. \u003Ccode\u003Edotnet publish\u003C/code\u003E), and generates an installer, and update package in a single command.\u003C/li\u003E\n\u003Cli\u003E\uD83C\uDFAF \u003Cstrong\u003ECross platform\u003C/strong\u003E \u2013 Velopack supports building packages for \u003Cstrong\u003EWindows\u003C/strong\u003E, \u003Cstrong\u003EOSX\u003C/strong\u003E, and \u003Cstrong\u003ELinux\u003C/strong\u003E. No matter your target, Velopack can create a release in just one command.\u003C/li\u003E\n\u003Cli\u003E\uD83D\uDE80 \u003Cstrong\u003EAutomatic migrations\u003C/strong\u003E - If you are coming from \u003Ca href=\u0022https://github.com/Squirrel/Squirrel.Windows\u0022\u003ESquirrel.Windows\u003C/a\u003E or \u003Ca href=\u0022https://github.com/clowd/Clowd.Squirrel\u0022\u003EClowd.Squirrel\u003C/a\u003E, Velopack will automatically migrate your application. Just build your Velopack release and deploy! \u003Ca href=\u0022docs/migrating.md\u0022\u003ERead more.\u003C/a\u003E\u003C/li\u003E\n\u003Cli\u003E\u26A1\uFE0F \u003Cstrong\u003ELightning fast\u003C/strong\u003E \u2013 Velopack is written in Rust for native performance. Creating releases is multi-threaded, and produces delta packages for ultra fast app updates. Applying update packages is highly optimised, and often can be done in the background.\u003C/li\u003E\n\u003C/ul\u003E\n\u003Ch2\u003EGetting Started\u003C/h2\u003E\u003C/p\u003E\n\n\u003Cp\u003EThis is a very simple example of the steps you would take to generate an installer and update packages for your application. Be sure to \u003Ca href=\u0022docs\u0022\u003Eread the documentation\u003C/a\u003E for an overview of more features!\u003C/p\u003E\n\n\u003Cp\u003E\u003Col\u003E\n\u003Cli\u003EInstall the command line tool \u003Ccode\u003Evpk\u003C/code\u003E:\n\u003Ccode\u003Ecmd\ndotnet tool install -g vpk\n\u003C/code\u003E\u003C/li\u003E\n\u003Cli\u003EInstall the  \u003Ca href=\u0022https://www.nuget.org/packages/velopack\u0022\u003EVelopack NuGet Package\u003C/a\u003E in your main project:\n\u003Ccode\u003Ecmd\ndotnet add package Velopack\n\u003C/code\u003E\u003C/li\u003E\n\u003Cli\u003EConfigure your Velopack app at the beginning of \u003Ccode\u003EProgram.Main\u003C/code\u003E:\n\u003Ccode\u003Ecs\nstatic void Main(string[] args)\n{\n   VelopackApp.Build().Run();\n   // ... your other startup code below\n}\n\u003C/code\u003E\u003C/li\u003E\n\u003Cli\u003EPublish dotnet and build your first Velopack release! \uD83C\uDF89\n\u003Ccode\u003Ecmd\ndotnet publish -c Release --self-contained -r win-x64 -o .\\publish\nvpk pack -u YourAppId -v 1.0.0 -p .\\publish\n\u003C/code\u003E\u003C/li\u003E\n\u003Cli\u003E\u003Cp\u003EAdd automatic updating to your app:\n\u0060\u0060\u0060cs\nprivate static async Task UpdateMyApp()\n{\n   var mgr = new UpdateManager(\u0022https://the.place/you-host/updates\u0022);\u003C/p\u003E\u003C/p\u003E\n\n\u003Cp\u003E\u003Cp\u003E// check for new version\n   var newVersion = await mgr.CheckForUpdatesAsync();\n   if (newVersion == null)\n       return; // no update available\u003C/p\u003E\u003C/p\u003E\n\n\u003Cp\u003E\u003Cp\u003E// download new version\n   await mgr.DownloadUpdatesAsync(newVersion);\u003C/p\u003E\u003C/p\u003E\n\n\u003Cp\u003E\u003Cp\u003E// install new version and restart app\n   mgr.ApplyUpdatesAndRestart();\n}\n\u0060\u0060\u0060\u003C/p\u003E\u003C/li\u003E\n\u003C/ol\u003E\nIf you\u0027re not sure how these instructions fit into your app, check the example apps for common scenarios such as WPF or Avalonia.\u003C/p\u003E\n\n\u003Cp\u003E\u003Ch2\u003EDocumentation\u003C/h2\u003E\u003C/p\u003E\n\n\u003Cp\u003E\u003Cul\u003E\n\u003Cli\u003E\uD83D\uDCD6 \u003Ca href=\u0022docs\u0022\u003ERead the docs\u003C/a\u003E\u003C/li\u003E\n\u003Cli\u003E\uD83D\uDD76\uFE0F \u003Ca href=\u0022examples\u0022\u003EView example apps\u003C/a\u003E\u003C/li\u003E\n\u003C/ul\u003E\n\u003Ch2\u003ECommunity\u003C/h2\u003E\u003C/p\u003E\n\n\u003Cp\u003E\u003Cul\u003E\n\u003Cli\u003E\u2753 Ask questions, get support, or discuss ideas on \u003Ca href=\u0022https://discord.gg/CjrCrNzd3F\u0022\u003Eour Discord server\u003C/a\u003E\u003C/li\u003E\n\u003Cli\u003E\uD83D\uDDE3\uFE0F Report bugs on \u003Ca href=\u0022https://github.com/velopack/velopack/issues\u0022\u003EGitHub Issues\u003C/a\u003E\u003C/li\u003E\n\u003C/ul\u003E\n\u003Ch2\u003EContributing\u003C/h2\u003E\u003C/p\u003E\n\n\u003Cp\u003E\u003Cul\u003E\n\u003Cli\u003E\uD83D\uDCAC Join us on \u003Ca href=\u0022https://discord.gg/CjrCrNzd3F\u0022\u003EDiscord\u003C/a\u003E to get involved in dev discussions\u003C/li\u003E\n\u003Cli\u003E\uD83D\uDEA6 Read our \u003Ca href=\u0022docs/compiling.md\u0022\u003Ecompiling guide\u003C/a\u003E\u003C/li\u003E\n\u003C/ul\u003E\u003C/p\u003E"
    },
    {
      "PackageId": "AvaloniaCrossPlat",
      "Version": "1.0.10",
      "Type": "Full",
      "FileName": "AvaloniaCrossPlat-1.0.10-full.nupkg",
      "SHA1": "384AB80ADF4E70A3AE82703F866DC0A20D5C7104",
      "Size": 14758787
    },
    {
      "PackageId": "AvaloniaCrossPlat",
      "Version": "1.0.10",
      "Type": "Delta",
      "FileName": "AvaloniaCrossPlat-1.0.10-delta.nupkg",
      "SHA1": "A1013517AAA7132469733D831508F8AC83E76D1F",
      "Size": 15011
    },
    {
      "PackageId": "AvaloniaCrossPlat",
      "Version": "1.0.9",
      "Type": "Full",
      "FileName": "AvaloniaCrossPlat-1.0.9-full.nupkg",
      "SHA1": "78B9E3F207EA610889665EA493D3A9CD77FE3536",
      "Size": 14758781
    },
    {
      "PackageId": "AvaloniaCrossPlat",
      "Version": "1.0.9",
      "Type": "Delta",
      "FileName": "AvaloniaCrossPlat-1.0.9-delta.nupkg",
      "SHA1": "BAF9B715B7A234BA09E27EB269CD2C2077A01FB4",
      "Size": 14985
    },
    {
      "PackageId": "AvaloniaCrossPlat",
      "Version": "1.0.6-build.30\u002Bmetadata",
      "Type": "Full",
      "FileName": "AvaloniaCrossPlat-1.0.6-build.30-full.nupkg",
      "SHA1": "FC4D23995E30D74082BFE8F186BBF6D0FB27F313",
      "Size": 14758866
    },
    {
      "PackageId": "AvaloniaCrossPlat",
      "Version": "1.0.6-build.30\u002Bmetadata",
      "Type": "Delta",
      "FileName": "AvaloniaCrossPlat-1.0.6-build.30-delta.nupkg",
      "SHA1": "7B12DAB98FCE5FCCD427B916F3D7BC94BB366B32",
      "Size": 14736
    },
    {
      "PackageId": "AvaloniaCrossPlat",
      "Version": "1.0.6-build.29\u002Bmetadata",
      "Type": "Full",
      "FileName": "AvaloniaCrossPlat-1.0.6-build.29\u002Bmetadata-full.nupkg",
      "SHA1": "4B7E42D72408DA2D833C849D10F516FBD6B3D7B2",
      "Size": 14758867
    },
    {
      "PackageId": "AvaloniaCrossPlat",
      "Version": "1.0.6-build.29\u002Bmetadata",
      "Type": "Delta",
      "FileName": "AvaloniaCrossPlat-1.0.6-build.29\u002Bmetadata-delta.nupkg",
      "SHA1": "B766FC5FA848A936D5CFB60A0582A4B8EA891B3D",
      "Size": 15103
    },
    {
      "PackageId": "AvaloniaCrossPlat",
      "Version": "1.0.5",
      "Type": "Full",
      "FileName": "AvaloniaCrossPlat-1.0.5-full.nupkg",
      "SHA1": "A9D9421EDD1664BB805BA773503E5CFC60ECCCB2",
      "Size": 14758780
    },
    {
      "PackageId": "AvaloniaCrossPlat",
      "Version": "1.0.5",
      "Type": "Delta",
      "FileName": "AvaloniaCrossPlat-1.0.5-delta.nupkg",
      "SHA1": "BF2B72E2E0A40A0CFD25BCC64DE24CC69B33E0EA",
      "Size": 73654
    },
    {
      "PackageId": "AvaloniaCrossPlat",
      "Version": "1.0.4",
      "Type": "Full",
      "FileName": "AvaloniaCrossPlat-1.0.4-full.nupkg",
      "SHA1": "B5B0E458771D59108990D87CBCEAC00170887FF3",
      "Size": 14758707
    },
    {
      "PackageId": "AvaloniaCrossPlat",
      "Version": "1.0.4",
      "Type": "Delta",
      "FileName": "AvaloniaCrossPlat-1.0.4-delta.nupkg",
      "SHA1": "C707A3644E062EF35DA8BA707A503A1455C6AFA2",
      "Size": 92120
    },
    {
      "PackageId": "AvaloniaCrossPlat",
      "Version": "1.0.3",
      "Type": "Full",
      "FileName": "AvaloniaCrossPlat-1.0.3-full.nupkg",
      "SHA1": "75776415ECB1C5A53281B1B9AED77E8AD9D40191",
      "Size": 14759065
    },
    {
      "PackageId": "AvaloniaCrossPlat",
      "Version": "1.0.3",
      "Type": "Delta",
      "FileName": "AvaloniaCrossPlat-1.0.3-delta.nupkg",
      "SHA1": "57D14DCB1D0FB178F195D598B93076F3A5B3988E",
      "Size": 14752
    },
    {
      "PackageId": "AvaloniaCrossPlat",
      "Version": "1.0.2",
      "Type": "Full",
      "FileName": "AvaloniaCrossPlat-1.0.2-full.nupkg",
      "SHA1": "4E564CBCF30BA03B446D16CF5A678928925B780E",
      "Size": 14759070
    },
    {
      "PackageId": "AvaloniaCrossPlat",
      "Version": "1.0.2",
      "Type": "Delta",
      "FileName": "AvaloniaCrossPlat-1.0.2-delta.nupkg",
      "SHA1": "F49C40A76A2607E8A60256E2013A65C9D654F9F6",
      "Size": 14752
    },
    {
      "PackageId": "AvaloniaCrossPlat",
      "Version": "1.0.1",
      "Type": "Full",
      "FileName": "AvaloniaCrossPlat-1.0.1-full.nupkg",
      "SHA1": "501C5AC6860E1AD8DF2ED619ED73D9A8C507B031",
      "Size": 14759057
    },
    {
      "PackageId": "AvaloniaCrossPlat",
      "Version": "1.0.1",
      "Type": "Delta",
      "FileName": "AvaloniaCrossPlat-1.0.1-delta.nupkg",
      "SHA1": "6789E1F78C113155CB7B9E083CD6DF7F86D5988D",
      "Size": 14753
    },
    {
      "PackageId": "AvaloniaCrossPlat",
      "Version": "1.0.0",
      "Type": "Full",
      "FileName": "AvaloniaCrossPlat-1.0.0-full.nupkg",
      "SHA1": "F8C2848BAF1791DEF4138157DB269C58B311EAFA",
      "Size": 14759050
    }
  ]
}